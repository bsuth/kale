local unit = require('erde.parser.unit')

spec('valid integer', function()
  assert.are.equal('9', unit.number('9'))
  assert.are.equal('43', unit.number('43'))
end)

spec('invalid integer', function()
  assert.has_error(function()
    unit.number('')
  end)
end)

spec('valid hex', function()
  assert.are.equal('0x4', unit.number('0x4'))
  assert.are.equal('0xd', unit.number('0xd'))
  assert.are.equal('0Xf', unit.number('0Xf'))
  assert.are.equal('0xa8F', unit.number('0xa8F'))
  assert.are.equal('0xfp2', unit.number('0xfp2'))
  assert.are.equal('0xfP2', unit.number('0xfP2'))
  assert.are.equal('0xfp+2', unit.number('0xfp+2'))
  assert.are.equal('0xfp-2', unit.number('0xfp-2'))
end)

spec('invalid hex', function()
  assert.has_error(function()
    unit.number('x3')
  end)
  assert.has_error(function()
    unit.number('0x')
  end)
  assert.has_error(function()
    unit.number('0xg')
  end)
  assert.has_error(function()
    unit.number('0xfp+')
  end)
  assert.has_error(function()
    unit.number('0xfp-')
  end)
  assert.has_error(function()
    unit.number('0xfpa')
  end)
end)

spec('valid integer exponent', function()
  assert.are.equal('9e2', unit.number('9e2'))
  assert.are.equal('9E21', unit.number('9E21'))
  assert.are.equal('9e+2', unit.number('9e+2'))
  assert.are.equal('9e-2', unit.number('9e-2'))
end)

spec('invalid integer exponent', function()
  assert.has_error(function()
    unit.number('9e')
  end)
  assert.has_error(function()
    unit.number('9e+')
  end)
  assert.has_error(function()
    unit.number('9e-')
  end)
  assert.has_error(function()
    unit.number('e2')
  end)
end)

spec('valid float', function()
  assert.are.equal('.34', unit.number('.34'))
  assert.are.equal('0.3', unit.number('0.3'))
  assert.are.equal('10.33', unit.number('10.33'))
end)

spec('invalid float', function()
  assert.has_error(function()
    unit.number('4.')
  end)
end)

spec('valid float exponent', function()
  assert.are.equal('9.2e2', unit.number('9.2e2'))
  assert.are.equal('9.01E21', unit.number('9.01E21'))
  assert.are.equal('0.1e+2', unit.number('0.1e+2'))
  assert.are.equal('.8e-2', unit.number('.8e-2'))
end)

spec('invalid float exponent', function()
  assert.has_error(function()
    unit.number('9.1e')
  end)
  assert.has_error(function()
    unit.number('9.1e+')
  end)
  assert.has_error(function()
    unit.number('9.1e-')
  end)
end)
